{
  "version": 3,
  "sources": ["../bundle-eqwEgP/checked-fetch.js", "../../../../../../Users/dchee/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../../../../../../Users/dchee/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/loader-sw.ts", "../../../../../../Users/dchee/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../Users/dchee/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-eqwEgP/middleware-insertion-facade.js", "../../../src/index.js"],
  "sourceRoot": "C:\\enough-source\\enough-source\\enough-home\\.wrangler\\tmp\\dev-5xE57h",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n} from \"./common\";\n\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport { __facade_registerInternal__ } from \"C:\\\\Users\\\\dchee\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\loader-sw.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\dchee\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\dchee\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\t\t\t\t__facade_registerInternal__([__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default])", "/**\r\n * Cloudflare Worker for ENOUGHGAMBLING website\r\n * - Serves content from Worker assets\r\n * - Assembles pages from components (header, content, footer)\r\n * - Handles dynamic routing for different content types\r\n * - Implements \"coming soon\" mode with override functionality\r\n */\r\n\r\n// Define content types for different file extensions\r\nconst contentTypes = {\r\n  'html': 'text/html',\r\n  'css': 'text/css',\r\n  'js': 'text/javascript',\r\n  'json': 'application/json',\r\n  'png': 'image/png',\r\n  'jpg': 'image/jpeg',\r\n  'jpeg': 'image/jpeg',\r\n  'svg': 'image/svg+xml',\r\n  'ico': 'image/x-icon',\r\n  'webp': 'image/webp',\r\n  'woff': 'font/woff',\r\n  'woff2': 'font/woff2',\r\n  'ttf': 'font/ttf',\r\n  'otf': 'font/otf',\r\n  'eot': 'application/vnd.ms-fontobject'\r\n};\r\n\r\n/**\r\n * Generate a 404 page\r\n */\r\nfunction generate404Page() {\r\n  return `<!DOCTYPE html>\r\n  <html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Page Not Found - ENOUGHGAMBLING</title>\r\n    <style>\r\n      body {\r\n        font-family: Arial, sans-serif;\r\n        margin: 0;\r\n        padding: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-height: 100vh;\r\n        text-align: center;\r\n        background-color: #f5f5f5;\r\n      }\r\n      .logo {\r\n        margin-bottom: 2rem;\r\n      }\r\n      .logo span.black {\r\n        color: #000;\r\n        font-weight: bold;\r\n        font-size: 2rem;\r\n      }\r\n      .logo span.red {\r\n        color: #FF0000;\r\n        font-weight: bold;\r\n        font-size: 2rem;\r\n      }\r\n      .message {\r\n        font-size: 1.2rem;\r\n        margin-bottom: 2rem;\r\n        max-width: 600px;\r\n        padding: 0 20px;\r\n      }\r\n      .back-link {\r\n        color: #FF0000;\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n      .back-link:hover {\r\n        text-decoration: underline;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div class=\"logo\">\r\n      <span class=\"black\">ENOUGH</span><span class=\"red\">GAMBLING</span>\r\n    </div>\r\n    <div class=\"message\">\r\n      <h1>Page Not Found</h1>\r\n      <p>We're sorry, but the page you are looking for doesn't exist or has been moved.</p>\r\n    </div>\r\n    <a href=\"/\" class=\"back-link\">Return to Homepage</a>\r\n  </body>\r\n  </html>`;\r\n}\r\n\r\n/**\r\n * Generate a coming soon page\r\n */\r\nfunction generateComingSoonPage() {\r\n  return `<!DOCTYPE html>\r\n  <html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Coming Soon - ENOUGHGAMBLING</title>\r\n    <style>\r\n      body {\r\n        font-family: Arial, sans-serif;\r\n        margin: 0;\r\n        padding: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-height: 100vh;\r\n        text-align: center;\r\n        background-color: #f5f5f5;\r\n      }\r\n      .logo {\r\n        margin-bottom: 2rem;\r\n      }\r\n      .logo span.black {\r\n        color: #000;\r\n        font-weight: bold;\r\n        font-size: 2.5rem;\r\n      }\r\n      .logo span.red {\r\n        color: #FF0000;\r\n        font-weight: bold;\r\n        font-size: 2.5rem;\r\n      }\r\n      .message {\r\n        font-size: 1.2rem;\r\n        margin-bottom: 2rem;\r\n        max-width: 600px;\r\n        padding: 0 20px;\r\n      }\r\n      .countdown {\r\n        margin-top: 2rem;\r\n        font-weight: bold;\r\n        font-size: 1.5rem;\r\n      }\r\n      .contact {\r\n        margin-top: 2rem;\r\n        font-size: 0.9rem;\r\n        color: #666;\r\n      }\r\n      .contact a {\r\n        color: #FF0000;\r\n        text-decoration: none;\r\n      }\r\n      .contact a:hover {\r\n        text-decoration: underline;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div class=\"logo\">\r\n      <span class=\"black\">ENOUGH</span><span class=\"red\">GAMBLING</span>\r\n    </div>\r\n    <div class=\"message\">\r\n      <h1>Coming Soon</h1>\r\n      <p>We're working hard to bring you resources and support for those affected by problem gambling.</p>\r\n      <p>Our site is under construction but will be launching soon.</p>\r\n    </div>\r\n    <div class=\"contact\">\r\n      Need immediate help? Contact the National Gambling Helpline: <a href=\"tel:18005224700\">1-800-522-4700</a>\r\n    </div>\r\n  </body>\r\n  </html>`;\r\n}\r\n\r\n/**\r\n * Assemble a complete HTML page from components\r\n * @param {string} navbar - HTML content for the navigation bar\r\n * @param {string} content - HTML content for the main body \r\n * @param {string} footer - HTML content for the footer\r\n * @param {string} title - Page title\r\n * @returns {string} - Fully assembled HTML page\r\n */\r\nfunction assemblePage(navbar, content, footer, title = 'ENOUGHGAMBLING - Support For Problem Gambling') {\r\n  return `<!DOCTYPE html>\r\n  <html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>${title}</title>\r\n    <link rel=\"stylesheet\" href=\"/style/styles.css\">\r\n    <meta name=\"description\" content=\"Support, resources, and community for those affected by problem gambling.\">\r\n  </head>\r\n  <body>\r\n    ${navbar}\r\n    <div class=\"content-container\">\r\n      ${content}\r\n    </div>\r\n    ${footer}\r\n    <script src=\"/scripts/script.js\"></script>\r\n  </body>\r\n  </html>`;\r\n}\r\n\r\n/**\r\n * Parse the path to determine the content type and specific content to serve\r\n * @param {string} pathname - URL path\r\n * @returns {object} - Content type and specific content identifier\r\n */\r\nfunction parseContentPath(pathname) {\r\n  // Default to home page\r\n  if (pathname === '/' || pathname === '') {\r\n    return { type: 'page', id: 'home' };\r\n  }\r\n  \r\n  // Static assets (CSS, JS, images, etc.)\r\n  if (pathname.includes('.')) {\r\n    // This is a static file request\r\n    return { type: 'static', path: pathname };\r\n  }\r\n\r\n  // Check for specific routes\r\n  const pathParts = pathname.split('/').filter(part => part !== '');\r\n  \r\n  if (pathParts[0] === 'location' && pathParts.length > 1) {\r\n    // Location route with postcode\r\n    return { type: 'location', id: pathParts[1] };\r\n  }\r\n  \r\n  if (pathParts[0] === 'resources') {\r\n    // Resources page\r\n    return { type: 'page', id: 'resources' };\r\n  }\r\n  \r\n  if (pathParts[0] === 'support-groups') {\r\n    // Support groups page\r\n    return { type: 'page', id: 'support-groups' };\r\n  }\r\n  \r\n  // For any other paths, treat as a page request\r\n  return { type: 'page', id: pathParts.join('/') };\r\n}\r\n\r\n/**\r\n * Fetch component from assets\r\n * @param {string} path - Path to the component\r\n * @returns {Promise<string>} - Component content\r\n */\r\nasync function fetchComponent(path) {\r\n  try {\r\n    const response = await fetch(path);\r\n    if (!response.ok) {\r\n      console.error(`Failed to fetch component from ${path}: ${response.status} ${response.statusText}`);\r\n      return null;\r\n    }\r\n    return await response.text();\r\n  } catch (error) {\r\n    console.error(`Error fetching component from ${path}:`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Export the Worker in the Modules format\r\nexport default {\r\n  /**\r\n   * Main fetch handler for the worker\r\n   * @param {Request} request - The incoming request\r\n   * @param {Object} env - Environment variables\r\n   * @param {Object} ctx - Context\r\n   * @returns {Response} - The response\r\n   */\r\n  async fetch(request, env, ctx) {\r\n    const url = new URL(request.url);\r\n    let pathname = url.pathname;\r\n    \r\n    // Check if the path uses the override mechanism\r\n    const isOverride = pathname.startsWith('/override/');\r\n    if (isOverride) {\r\n      // Remove the /override part from the pathname\r\n      pathname = pathname.replace('/override', '');\r\n    }\r\n    \r\n    // Check if we're in coming soon mode and not using override\r\n    const comingSoon = env.COMING_SOON === 'TRUE';\r\n    if (comingSoon && !isOverride) {\r\n      return new Response(generateComingSoonPage(), {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'text/html',\r\n          'Cache-Control': 'public, max-age=3600'\r\n        }\r\n      });\r\n    }\r\n    \r\n    try {\r\n      const contentPath = parseContentPath(pathname);\r\n      \r\n      // Handle static file requests\r\n      if (contentPath.type === 'static') {\r\n        // Use the built-in asset handling\r\n        const assetUrl = new URL(contentPath.path, url.origin);\r\n        const response = await fetch(assetUrl.toString());\r\n        \r\n        if (response.status === 404) {\r\n          // File not found, return 404\r\n          return new Response(generate404Page(), {\r\n            status: 404,\r\n            headers: {\r\n              'Content-Type': 'text/html',\r\n              'Cache-Control': 'public, max-age=3600'\r\n            }\r\n          });\r\n        }\r\n        \r\n        // Get appropriate content type based on file extension\r\n        const extension = contentPath.path.split('.').pop().toLowerCase();\r\n        const contentType = contentTypes[extension] || 'text/plain';\r\n        \r\n        // Create a new response with custom headers\r\n        const newResponse = new Response(response.body, response);\r\n        newResponse.headers.set('Content-Type', contentType);\r\n        newResponse.headers.set('Cache-Control', 'public, max-age=86400');\r\n        \r\n        return newResponse;\r\n      }\r\n      \r\n      // Handle page requests by assembling components\r\n      if (contentPath.type === 'page') {\r\n        // Get the navbar and footer components\r\n        const [navbar, footer] = await Promise.all([\r\n          fetchComponent('/TopNavBar.html'),\r\n          fetchComponent('/footer.html')\r\n        ]);\r\n        \r\n        if (!navbar || !footer) {\r\n          throw new Error('Could not load page template components');\r\n        }\r\n        \r\n        let content;\r\n        let pageTitle = 'ENOUGHGAMBLING';\r\n        \r\n        // Load the appropriate content based on the page ID\r\n        if (contentPath.id === 'home') {\r\n          content = await fetchComponent('/homepage.html');\r\n          pageTitle += ' - Support For Problem Gambling';\r\n        } else {\r\n          // Check if a specific page template exists\r\n          content = await fetchComponent(`/pages/${contentPath.id}.html`);\r\n          \r\n          // If no specific page template, return 404\r\n          if (!content) {\r\n            return new Response(generate404Page(), {\r\n              status: 404,\r\n              headers: {\r\n                'Content-Type': 'text/html',\r\n                'Cache-Control': 'public, max-age=3600'\r\n              }\r\n            });\r\n          }\r\n          \r\n          pageTitle += ` - ${contentPath.id.charAt(0).toUpperCase() + contentPath.id.slice(1).replace(/-/g, ' ')}`;\r\n        }\r\n        \r\n        // If content still couldn't be loaded, return 404\r\n        if (!content) {\r\n          return new Response(generate404Page(), {\r\n            status: 404,\r\n            headers: {\r\n              'Content-Type': 'text/html',\r\n              'Cache-Control': 'public, max-age=3600'\r\n            }\r\n          });\r\n        }\r\n        \r\n        // Assemble the complete page\r\n        const assembledPage = assemblePage(\r\n          navbar,\r\n          content,\r\n          footer,\r\n          pageTitle\r\n        );\r\n        \r\n        // Return the assembled page\r\n        return new Response(assembledPage, {\r\n          headers: {\r\n            'Content-Type': 'text/html',\r\n            'Cache-Control': 'public, max-age=3600'\r\n          }\r\n        });\r\n      }\r\n      \r\n      // Handle location requests\r\n      if (contentPath.type === 'location') {\r\n        // Here we would normally make a call to a location service\r\n        // For now, we'll show a placeholder page that can be replaced with actual service binding later\r\n        \r\n        const postcode = contentPath.id;\r\n        \r\n        // Verify postcode format (basic UK postcode validation)\r\n        const postcodeRegex = /^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$/i;\r\n        if (!postcodeRegex.test(postcode)) {\r\n          return new Response(`\r\n            <div>\r\n              <h1>Invalid Postcode Format</h1>\r\n              <p>The postcode \"${postcode}\" does not appear to be valid. Please check and try again.</p>\r\n            </div>\r\n          `, {\r\n            status: 400,\r\n            headers: {\r\n              'Content-Type': 'text/html',\r\n            }\r\n          });\r\n        }\r\n        \r\n        // Get the navbar and footer\r\n        const [navbar, footer] = await Promise.all([\r\n          fetchComponent('/TopNavBar.html'),\r\n          fetchComponent('/footer.html')\r\n        ]);\r\n        \r\n        if (!navbar || !footer) {\r\n          throw new Error('Could not load page template components');\r\n        }\r\n        \r\n        // Create a placeholder content block (this would be replaced by service binding later)\r\n        const locationContent = `\r\n          <div class=\"main-content\">\r\n            <div class=\"info-box\">\r\n              <h1>Support Services Near ${postcode.toUpperCase()}</h1>\r\n              <p>This page will display gambling support services near your location.</p>\r\n              <p>In the future, this content will be dynamically loaded from a location service binding.</p>\r\n            </div>\r\n            \r\n            <div class=\"resources-grid\">\r\n              <div class=\"resource-card\">\r\n                <h3>Local Support Group</h3>\r\n                <p>Example support group near ${postcode.toUpperCase()}</p>\r\n                <p>Address: 123 Example Street</p>\r\n                <p>Phone: 01234 567890</p>\r\n              </div>\r\n              <div class=\"resource-card\">\r\n                <h3>Counseling Center</h3>\r\n                <p>Example counseling service within 5 miles of ${postcode.toUpperCase()}</p>\r\n                <p>Address: 456 Example Road</p>\r\n                <p>Phone: 01234 567891</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n        \r\n        // Assemble the complete page\r\n        const assembledPage = assemblePage(\r\n          navbar,\r\n          locationContent,\r\n          footer,\r\n          `ENOUGHGAMBLING - Support Services Near ${postcode.toUpperCase()}`\r\n        );\r\n        \r\n        // Return the assembled page\r\n        return new Response(assembledPage, {\r\n          headers: {\r\n            'Content-Type': 'text/html',\r\n            'Cache-Control': 'public, max-age=3600'\r\n          }\r\n        });\r\n      }\r\n      \r\n      // If we get here, we don't know how to handle the request\r\n      return new Response(generate404Page(), {\r\n        status: 404,\r\n        headers: {\r\n          'Content-Type': 'text/html',\r\n          'Cache-Control': 'public, max-age=3600'\r\n        }\r\n      });\r\n      \r\n    } catch (error) {\r\n      // Log error and return 500 response\r\n      console.error(`Error handling request for ${pathname}:`, error);\r\n      return new Response('Internal Server Error', {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'text/plain'\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": ["ctx"]
}
